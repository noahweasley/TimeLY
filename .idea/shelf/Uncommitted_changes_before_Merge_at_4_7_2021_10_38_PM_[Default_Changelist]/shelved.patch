Index: app/src/main/java/com/projects/timely/alarms/AlarmListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.projects.timely.alarms;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.res.Configuration;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Process;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.projects.timely.R;\r\nimport com.projects.timely.core.DataModel;\r\nimport com.projects.timely.core.EmptyListEvent;\r\nimport com.projects.timely.core.Globals.Alert;\r\nimport com.projects.timely.core.RequestRunner;\r\nimport com.projects.timely.core.SchoolDatabase;\r\nimport com.projects.timely.error.ErrorDialog;\r\n\r\nimport org.greenrobot.eventbus.EventBus;\r\nimport org.greenrobot.eventbus.Subscribe;\r\nimport org.greenrobot.eventbus.ThreadMode;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.LinkedList;\r\nimport java.util.Locale;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\r\nimport androidx.core.os.ConfigurationCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport static com.projects.timely.alarms.AlarmReceiver.ALARM_POS;\r\nimport static com.projects.timely.core.Globals.isUserPreferred24Hours;\r\nimport static com.projects.timely.core.Globals.playAlertTone;\r\nimport static com.projects.timely.core.Globals.runBackgroundTask;\r\n\r\n@SuppressWarnings({\"ConstantConditions\"})\r\npublic class AlarmListFragment extends Fragment {\r\n    public static final String DELETE_REQUEST = \"delete alarm\";\r\n    FragmentActivity mActivity;\r\n    private ConstraintLayout no_alarm_view;\r\n    private LinkedList<DataModel> aList;\r\n    private AlarmAdapter alarmAdapter;\r\n    private Calendar calendar = Calendar.getInstance();\r\n    private SchoolDatabase database;\r\n    private CoordinatorLayout coordinator;\r\n    private ProgressBar indeterminateProgress;\r\n\r\n    @Override\r\n    public void onCreate(Bundle state) {\r\n        super.onCreate(state);\r\n        mActivity = getActivity();\r\n        database = new SchoolDatabase(mActivity);\r\n        alarmAdapter = new AlarmAdapter();\r\n        aList = new LinkedList<>();\r\n        EventBus.getDefault().register(this);\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        database.close();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle bundle) {\r\n        return inflater.inflate(R.layout.fragment_alarm_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, Bundle state) {\r\n\r\n        coordinator = view.findViewById(R.id.coordinator);\r\n        no_alarm_view = view.findViewById(R.id.no_alarm_view);\r\n        RecyclerView rV_AlarmList = view.findViewById(R.id.alarm_list);\r\n        indeterminateProgress = view.findViewById(R.id.indeterminateProgress);\r\n\r\n        runBackgroundTask(() -> {\r\n            Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);\r\n            aList = (LinkedList<DataModel>) database.getAlarms();\r\n            if (isAdded())\r\n                getActivity().runOnUiThread(() -> {\r\n                    boolean empty = aList.isEmpty();\r\n                    no_alarm_view.setVisibility(empty ? View.VISIBLE : View.GONE);\r\n\r\n                    indeterminateProgress.animate()\r\n                            .scaleX(0.0f)\r\n                            .scaleY(0.0f)\r\n                            .setDuration(1000);\r\n\r\n                    alarmAdapter.notifyDataSetChanged();\r\n                });\r\n        });\r\n\r\n        FloatingActionButton fab_add_new = view.findViewById(R.id.add_alarm);\r\n\r\n        fab_add_new.setOnClickListener(new TimeManager());\r\n\r\n        rV_AlarmList.setHasFixedSize(true);\r\n//        alarmAdapter.setHasStableIds(true);\r\n        rV_AlarmList.setAdapter(alarmAdapter);\r\n        rV_AlarmList.addItemDecoration(\r\n                new DividerItemDecoration(getContext(), LinearLayoutManager.VERTICAL));\r\n        rV_AlarmList.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n        ItemTouchHelper deleteSwiper = new ItemTouchHelper(new ItemTouchHelper.Callback() {\r\n            @Override\r\n            public int getMovementFlags(@NonNull RecyclerView recyclerView,\r\n                                        @NonNull RecyclerView.ViewHolder viewHolder) {\r\n                return makeMovementFlags(0, ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT);\r\n            }\r\n\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView,\r\n                                  @NonNull RecyclerView.ViewHolder viewHolder,\r\n                                  @NonNull RecyclerView.ViewHolder target) {\r\n                // Not implemented, return false\r\n                return false;\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n                // post a delete request on the assignment database\r\n                RequestRunner runner = RequestRunner.getInstance();\r\n                Snackbar snackbar = Snackbar.make(coordinator, \"Assignment Deleted\",\r\n                                                  Snackbar.LENGTH_LONG)\r\n                        .setAction(\"undo\", v -> runner.undoRequest())\r\n                        .setActionTextColor(Color.YELLOW);\r\n\r\n                snackbar.show();\r\n\r\n                int pos = viewHolder.getAbsoluteAdapterPosition();\r\n                String[] elements = database.getElementaryAlarmDataAt(pos);\r\n\r\n                RequestRunner.Builder builder = new RequestRunner.Builder();\r\n                builder.setOwnerContext(getActivity())\r\n                        .setAdapterPosition(viewHolder.getAbsoluteAdapterPosition())\r\n                        .setAdapter(alarmAdapter)\r\n                        .setModelList(aList)\r\n                        .setAlarmTime(elements);\r\n\r\n                runner.setRequestParams(builder.getParams())\r\n                        .runRequest(DELETE_REQUEST);\r\n            }\r\n        });\r\n\r\n        deleteSwiper.attachToRecyclerView(rV_AlarmList);\r\n    }\r\n\r\n    @Override\r\n    public void onDetach() {\r\n        EventBus.getDefault().unregister(this);\r\n        super.onDetach();\r\n    }\r\n\r\n    @Subscribe(threadMode = ThreadMode.MAIN)\r\n    public void doEmptyResponse(EmptyListEvent alarmEvent) {\r\n        no_alarm_view.setVisibility(aList.isEmpty() ? View.VISIBLE : View.GONE);\r\n    }\r\n\r\n    // This class will handle everything related to alarms\r\n    private class TimeManager implements View.OnClickListener, TimePickerDialog.OnTimeSetListener {\r\n\r\n        /**\r\n         * Called when a view has been clicked.\r\n         *\r\n         * @param v The view that was clicked.\r\n         */\r\n        @Override\r\n        public void onClick(View v) {\r\n            boolean is24 = isUserPreferred24Hours(getContext());\r\n            Calendar calendar = Calendar.getInstance();\r\n            new TimePickerDialog(getContext(),\r\n                                 this,\r\n                                 calendar.get(Calendar.HOUR_OF_DAY),\r\n                                 calendar.get(Calendar.MINUTE),\r\n                                 is24)\r\n                    .show();\r\n        }\r\n\r\n        /**\r\n         * z\r\n         * Called when the user is done setting a new time and the dialog has\r\n         * closed.\r\n         *\r\n         * @param view      the view associated with this listener\r\n         * @param hourOfDay the hour that was set\r\n         * @param minute    the minute that was set\r\n         */\r\n        @Override\r\n        public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.set(Calendar.HOUR_OF_DAY, hourOfDay);\r\n            calendar.set(Calendar.MINUTE, minute);\r\n\r\n            boolean is24 = isUserPreferred24Hours(getContext());\r\n            Configuration config = getResources().getConfiguration();\r\n            Locale currentLocale = ConfigurationCompat.getLocales(config).get(0);\r\n\r\n            SimpleDateFormat timeFormat24 = new SimpleDateFormat(\"HH:mm\", currentLocale);\r\n            SimpleDateFormat timeFormat12 = new SimpleDateFormat(\"hh:mm aa\", currentLocale);\r\n\r\n            String time = timeFormat24.format(calendar.getTime());\r\n\r\n            if (database.isAlarmPresent(time)) {\r\n                String message = \"Alarm for %s exists\";\r\n                String sTime = is24 ? timeFormat24.format(calendar.getTime())\r\n                                    : timeFormat12.format(calendar.getTime());\r\n\r\n                ErrorDialog.Builder errorBuilder = new ErrorDialog.Builder();\r\n                errorBuilder.setShowSuggestions(true)\r\n                        .setDialogMessage(String.format(message, sTime))\r\n                        .setShowSuggestions(true)\r\n                        .setSuggestionCount(2)\r\n                        .setSuggestion1(\"Consider editing former alarm\")\r\n                        .setSuggestion2(\"Delete former alarm\");\r\n\r\n                new ErrorDialog().showErrorMessage(getContext(), errorBuilder.build());\r\n\r\n                return;\r\n            }\r\n\r\n            scheduleAlarm(is24, time);\r\n\r\n        }\r\n\r\n        private void scheduleAlarm(boolean is24, String alarmTime) {\r\n\r\n            int lastId = database.getLastAlarmId();\r\n            int DB_initialPos;\r\n            AlarmModel newAlarm = new AlarmModel();\r\n            newAlarm.setOn(true);\r\n            newAlarm.setTime(alarmTime);\r\n            newAlarm.setVibrate(true);\r\n            newAlarm.setRepeatDays(new Boolean[7]);\r\n            newAlarm.setPosition((DB_initialPos = ++lastId));\r\n            newAlarm.setInitialPosition(DB_initialPos);\r\n\r\n            boolean isAlarmAdded = database.addAlarm(newAlarm);\r\n\r\n            // The amount of milliseconds to the next day\r\n            final int NEXT_DAY = 1000 * 60 * 60 * 24;\r\n\r\n            String[] time = alarmTime.split(\":\");\r\n            int hh = Integer.parseInt(time[0]);\r\n            int mm = Integer.parseInt(time[1]);\r\n            calendar.setTimeInMillis(System.currentTimeMillis());\r\n            calendar.set(Calendar.HOUR_OF_DAY, hh);\r\n            calendar.set(Calendar.MINUTE, mm);\r\n            calendar.set(Calendar.SECOND, 0);\r\n            calendar.set(Calendar.MILLISECOND, 0);\r\n\r\n            boolean isNextDay = System.currentTimeMillis() > calendar.getTimeInMillis();\r\n\r\n            if (isAlarmAdded) {\r\n                aList.add(newAlarm);\r\n\r\n                boolean isAM = hh >= 0 && hh < 12;\r\n                Resources aResources = getResources();\r\n                Configuration config = aResources.getConfiguration();\r\n                Locale locale = ConfigurationCompat.getLocales(config).get(0);\r\n\r\n                String formattedHrAM = String.format(locale, \"%02d\", (hh == 0 ? 12 : hh));\r\n                String formattedHrPM = String.format(locale, \"%02d\", (hh % 12 == 0 ? 12 : hh % 12));\r\n                String formattedMinAM = String.format(locale, \"%02d\", mm) + \" AM\";\r\n                String formattedMinPM = String.format(locale, \"%02d\", mm) + \" PM\";\r\n\r\n                String _12H = isAM ? formattedHrAM + \":\" + formattedMinAM\r\n                                   : formattedHrPM + \":\" + formattedMinPM;\r\n\r\n                String message = isNextDay ? \"Alarm set for: \" + (is24 ? alarmTime\r\n                                                                       : _12H) + \" tomorrow\"\r\n                                           : \"Alarm set for: \" + (is24 ? alarmTime\r\n                                                                       : _12H) + \" today\";\r\n\r\n                long alarmMillis = isNextDay ? calendar.getTimeInMillis() + NEXT_DAY\r\n                                             : calendar.getTimeInMillis();\r\n\r\n                Intent alarmReceiverIntent = new Intent(mActivity, AlarmReceiver.class);\r\n                alarmReceiverIntent.putExtra(ALARM_POS, DB_initialPos);\r\n                alarmReceiverIntent.putExtra(\"Time\", alarmTime);\r\n\r\n                alarmReceiverIntent.addCategory(\"com.projects.timely.alarm.category\");\r\n                alarmReceiverIntent.setAction(\"com.projects.timely.alarm.cancel\");\r\n                alarmReceiverIntent.setDataAndType(\r\n                        Uri.parse(\"content://com.projects.timely/Alarms/alarm\" + alarmMillis),\r\n                        \"com.projects.timely.alarm.dataType\");\r\n\r\n                AlarmManager alarmManager\r\n                        = (AlarmManager) mActivity.getSystemService(Context.ALARM_SERVICE);\r\n                PendingIntent alarmPI = PendingIntent.getBroadcast(mActivity,\r\n                                                                   1189765,\r\n                                                                   alarmReceiverIntent,\r\n                                                                   PendingIntent.FLAG_CANCEL_CURRENT);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n                    alarmManager.setExact(AlarmManager.RTC_WAKEUP, alarmMillis, alarmPI);\r\n                } else {\r\n                    alarmManager.set(AlarmManager.RTC_WAKEUP, alarmMillis, alarmPI);\r\n                }\r\n\r\n                // notify the user using the changes in the UI that an alarm was added\r\n\r\n                alarmAdapter.notifyItemInserted(aList.size() - 1);\r\n                no_alarm_view.setVisibility(View.GONE);\r\n\r\n                // play alert tone if user activated alert tones in user settings\r\n                Toast alert = Toast.makeText(mActivity, message, Toast.LENGTH_LONG);\r\n                int yOffset = getResources().getInteger(R.integer.toast_y_offset);\r\n                alert.setGravity(Gravity.CENTER_HORIZONTAL, 0, yOffset);\r\n                alert.show();\r\n                playAlertTone(mActivity.getApplicationContext(), Alert.ALARM);\r\n\r\n            } else\r\n                // This shouldn't show at all, it was only used in application testing\r\n                Toast.makeText(mActivity, \"A problem occurred\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // The layout for the alarms occupying the alarm_list RecyclerView\r\n    class AlarmAdapter extends RecyclerView.Adapter<AlarmListHolder> {\r\n\r\n        @NonNull\r\n        @Override\r\n        public AlarmListHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n            return new AlarmListHolder(getLayoutInflater().inflate(R.layout.alarms_row,\r\n                                                                   viewGroup, false));\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(@NonNull AlarmListHolder viewHolder, int pos) {\r\n            viewHolder.with(mActivity, coordinator, aList, database, alarmAdapter).bindView();\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return aList.size();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/projects/timely/alarms/AlarmListFragment.java	(revision 06b73247f2e293a1a18cf0907f28ee180196174a)
+++ app/src/main/java/com/projects/timely/alarms/AlarmListFragment.java	(date 1617846564256)
@@ -62,7 +62,7 @@
     private ConstraintLayout no_alarm_view;
     private LinkedList<DataModel> aList;
     private AlarmAdapter alarmAdapter;
-    private Calendar calendar = Calendar.getInstance();
+    private final Calendar calendar = Calendar.getInstance();
     private SchoolDatabase database;
     private CoordinatorLayout coordinator;
     private ProgressBar indeterminateProgress;
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># TimeLY\r\nAn Android app that manages University students activities\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- README.md	(revision 06b73247f2e293a1a18cf0907f28ee180196174a)
+++ README.md	(date 1617846564701)
@@ -1,2 +1,3 @@
 # TimeLY
-An Android app that manages University students activities
+
+## An Android app that manages University students activities
Index: app/src/main/java/com/projects/timely/gallery/ImageDirectory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.projects.timely.gallery;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ContentUris;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport com.projects.timely.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n\r\n@SuppressWarnings(\"ConstantConditions\")\r\npublic class ImageDirectory extends AppCompatActivity implements Runnable {\r\n    public static final int requestCode = 112;\r\n    //    List<Image> imageArrayList = new ArrayList<>();\r\n    List<List<Image>> imageDirectoryList = new ArrayList<>();\r\n    private ImageAdapter imageAdapter = new ImageAdapter();\r\n    private ProgressBar indeterminateProgress;\r\n    private RecyclerView imageList;\r\n\r\n    protected void onCreate(Bundle state) {\r\n        super.onCreate(state);\r\n        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\r\n        setContentView(R.layout.image_gallery);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        imageList = findViewById(R.id.imageList);\r\n        indeterminateProgress = findViewById(R.id.indeterminateProgress);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setTitle(\"Select Image\");\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        imageList.setHasFixedSize(true);\r\n        imageList.setAdapter(imageAdapter);\r\n        imageList.setLayoutManager(new GridLayoutManager(this, 2));\r\n        imageList.setClickable(true);\r\n\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)\r\n                == PackageManager.PERMISSION_GRANTED) {\r\n            new Thread(this).start();\r\n        } else {\r\n            ActivityCompat.requestPermissions(this,\r\n                                              new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                                              requestCode);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        onBackPressed();\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int _requestCode,\r\n                                           @NonNull String[] permissions,\r\n                                           @NonNull int[] grantResults) {\r\n        if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n            new Thread(this).start();\r\n        } else {\r\n            Toast.makeText(this, \"Image selector requires permission\", Toast.LENGTH_LONG).show();\r\n            finish();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    @SuppressLint(\"InlinedApi\")\r\n    public void run() {\r\n        String[] projection = {\r\n                MediaStore.Images.Media._ID,\r\n                MediaStore.Images.Media.BUCKET_DISPLAY_NAME,\r\n                MediaStore.Images.Media.SIZE,\r\n                MediaStore.Images.Media.DISPLAY_NAME};\r\n        Cursor imgCursor = getApplicationContext()\r\n                .getContentResolver()\r\n                .query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n                       projection, null, null, null);\r\n\r\n        int bucketId = imgCursor.getColumnIndexOrThrow(MediaStore.Images.Media._ID);\r\n        int imgSize = imgCursor.getColumnIndexOrThrow(MediaStore.Images.Media.SIZE);\r\n        int name = imgCursor.getColumnIndexOrThrow(MediaStore.Images.Media.DISPLAY_NAME);\r\n        int bucketName\r\n                = imgCursor.getColumnIndexOrThrow(MediaStore.Images.Media.BUCKET_DISPLAY_NAME);\r\n\r\n        List<String> dirName = new ArrayList<>();\r\n        while (imgCursor.moveToNext()) {\r\n            long id = imgCursor.getLong(bucketId);\r\n            int size = imgCursor.getInt(imgSize);\r\n            String fileName = imgCursor.getString(name);\r\n            String folderName = imgCursor.getString(bucketName);\r\n\r\n            Uri contentUri\r\n                    = ContentUris.withAppendedId(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n                                                 id);\r\n            Image currentImage = new Image(contentUri, size, fileName, folderName);\r\n\r\n            int directoryIndex = linearSearch(dirName, folderName);\r\n            // if search result (directoryIndex) passes this test, then it means that there is\r\n            // no such directory in list of directory names\r\n            if (directoryIndex < 0) {\r\n                imageDirectoryList.add(new ArrayList<>());\r\n                dirName.add(folderName);\r\n                directoryIndex = linearSearch(dirName, folderName);\r\n                if (directoryIndex >= 0)\r\n                    imageDirectoryList.get(directoryIndex).add(currentImage);\r\n            } else {\r\n                imageDirectoryList.get(directoryIndex).add(currentImage);\r\n            }\r\n        }\r\n\r\n        imgCursor.close();\r\n        runOnUiThread(() -> {\r\n            imageAdapter.notifyDataSetChanged();\r\n            doViewUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    private void doViewUpdate() {\r\n        indeterminateProgress.setVisibility(imageDirectoryList.isEmpty() ? View.VISIBLE\r\n                                                                         : View.GONE);\r\n        imageList.setVisibility(imageDirectoryList.isEmpty() ? View.GONE : View.VISIBLE);\r\n    }\r\n\r\n    /*\r\n     Collection.binarySearch() (which uses the binary search algorithm) would have been a\r\n     better choice because of it's faster search time, but because I would need to sort the\r\n     list to use Collection.binarySearch(), and sorting is not favoured in this program,\r\n     I just had to use the linear search algorithm.\r\n     */\r\n    private int linearSearch(List<String> list, String dir) {\r\n        for (int i = 0; i < list.size(); i++) {\r\n            if (list.get(i).equals(dir)) return i; // dir found, return immediately\r\n        }\r\n        return -1; // dir was not found\r\n    }\r\n\r\n    // Image List Adapter\r\n    private class ImageAdapter extends RecyclerView.Adapter<ImageRowHolder> {\r\n\r\n        @NonNull\r\n        @Override\r\n        public ImageRowHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int pos) {\r\n            View view = getLayoutInflater().inflate(R.layout.layout_image_directory_row,\r\n                                                    viewGroup,\r\n                                                    false);\r\n            return new ImageRowHolder(view).setAction(getIntent().getAction());\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(@NonNull ImageRowHolder viewHolder, int pos) {\r\n            viewHolder.with(ImageDirectory.this, imageDirectoryList, pos).loadThumbnail();\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return imageDirectoryList.size();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/projects/timely/gallery/ImageDirectory.java	(revision 06b73247f2e293a1a18cf0907f28ee180196174a)
+++ app/src/main/java/com/projects/timely/gallery/ImageDirectory.java	(date 1617860304074)
@@ -26,13 +26,12 @@
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-
 @SuppressWarnings("ConstantConditions")
 public class ImageDirectory extends AppCompatActivity implements Runnable {
     public static final int requestCode = 112;
     //    List<Image> imageArrayList = new ArrayList<>();
     List<List<Image>> imageDirectoryList = new ArrayList<>();
-    private ImageAdapter imageAdapter = new ImageAdapter();
+    private final ImageAdapter imageAdapter = new ImageAdapter();
     private ProgressBar indeterminateProgress;
     private RecyclerView imageList;
 
@@ -78,6 +77,7 @@
     public void onRequestPermissionsResult(int _requestCode,
                                            @NonNull String[] permissions,
                                            @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(_requestCode, permissions, grantResults);
         if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             new Thread(this).start();
         } else {
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"C:/gradle/gradle-6.1.1\" />\r\n        <option name=\"gradleJvm\" value=\"1.8 (2)\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 06b73247f2e293a1a18cf0907f28ee180196174a)
+++ .idea/gradle.xml	(date 1617838155065)
@@ -7,7 +7,7 @@
         <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleHome" value="C:/gradle/gradle-6.1.1" />
+        <option name="gradleHome" value="$PROJECT_DIR$/../../../../gradle/gradle-6.1.1" />
         <option name="gradleJvm" value="1.8 (2)" />
         <option name="modules">
           <set>
@@ -16,6 +16,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"ConstantConditions\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\">\r\n      <option name=\"SUGGEST_NULLABLE_ANNOTATIONS\" value=\"false\" />\r\n      <option name=\"DONT_REPORT_TRUE_ASSERT_STATEMENTS\" value=\"false\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision 06b73247f2e293a1a18cf0907f28ee180196174a)
+++ .idea/inspectionProfiles/Project_Default.xml	(date 1617843824091)
@@ -1,9 +1,54 @@
 <component name="InspectionProjectProfileManager">
   <profile version="1.0">
     <option name="myName" value="Project Default" />
-    <inspection_tool class="ConstantConditions" enabled="false" level="WARNING" enabled_by_default="false">
-      <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
-      <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
-    </inspection_tool>
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoCipherInsecureAsymmetricCryptographicAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoKeyAgreementGuideonApprovedCryptographicAlgorithm" enabled="true" level="SENSEI MARKED INFO" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoKeyAgreementInsecureCryptographicAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoKeyPairGenerationApprovedStandardCryptographicAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoKeyPairGenerationInsecureCryptographicAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoKeyPairGenerationNonStandardCryptographicAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoSignatureApprovedHashingAlgorithm" enabled="true" level="SENSEI MARKED INFO" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoSignatureInsecureHashingAlgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_CryptoSignatureNonStandardHashingAlgorithm" enabled="true" level="SENSEI WARNING" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataInjectionParameterizeLDAPFiltersDirContextsearch" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidbruteforcingUsesufficientlylongkeysizeskeyGenerator" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatekeypairgenerationalgorithminsecure" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatekeypairgenerationalgorithmnotrecommended" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmDESfamily" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmHmacfamily" enabled="true" level="SENSEI WARNING" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmHmacfamily1" enabled="true" level="SENSEI WARNING" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmOtheralgorithms" enabled="true" level="SENSEI MARKED INFO" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithminsecureSecretKeyFactory" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmnotrecommendedSecretKeyFactory" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUseappropriatesecretkeygenerationalgorithmotherSecretKeyFactory" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUsestrongsymmetriccryptographicalgorithm" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUsesufficientlylongkeysizeskeyGeneratorbadvalue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUsesufficientlylongkeysizeskeyPairGenerator" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-CryptographyAvoidcryptographicweaknessUsesufficientlylongkeysizeskeyPairGeneratorbadvalue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_DataProtection-SecureDataStorageAvoiddataexposureUseCipherinsteadofNullCipher" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidCodeInjectionUseSafeConstructor1stargumentoftypeConstructor" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidCodeInjectionUseSafeConstructorargumentsbutnoConstructorargument" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidCodeInjectionUseSafeConstructornoarguments" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidSQLInjectionUseParameterizedQueriesPreparedStatement" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidSQLInjectionUseParameterizedQueriesStatement" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidXMLInjectionUsesetFeature" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidXMLInjectionUsesetSchema" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InjectionAvoidXMLInjectionsetFeaturewithbadvalue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InputValidationAvoidXXEDonotsetDocumentBuilderFactoryexternal-parameter-entitiestotrue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InputValidationAvoidXXEDonotsetDocumentBuilderFactoryload-external-dtdtotrue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InputValidationAvoidXXEDonotsetDocumentBuilderFactorysetExpandEntityReferencestotrue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InputValidationAvoidXXEDonotsetDocumentBuilderFactorysetXIncludeAwaretotrue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_InputValidationAvoidXXEDonotsetXMLInputFactoryPropertytotrue" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_PortabilityFlawAvoidlocaledependentcomparisonsequalsaftercaseconversion" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_TLSWeakEncryptionInsecureVersion" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_TLSWeakEncryptionOutdatedVersion" enabled="true" level="SENSEI WARNING" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetExpandEntityReferencestofalse" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetFeaturedissallow-doctype-decl" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetFeaturedissallow-doctype-declwrongboolean" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetFeatureexternal-parameter-entitiesshouldbesetfirst" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetFeatureload-external-dtd" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesDocumentBuilderFactorysetXIncludeAware" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesXMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
+    <inspection_tool class="fcd36335-ac86-4bef-8d30-062d8aae0364_XMLExternalEntitiesXMLInputFactory.SUPPORT_DTD" enabled="true" level="SENSEI ERROR" enabled_by_default="true" />
   </profile>
 </component>
\ No newline at end of file
