Index: app/src/main/java/com/projects/timely/gallery/FullScreenImageFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.projects.timely.gallery;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport com.projects.timely.R;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\npublic class FullScreenImageFragment extends Fragment {\r\n    public static final String ARG_IMAGE = \"Fullscreen image\";\r\n\r\n    public static FullScreenImageFragment newInstance(Image image) {\r\n\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(ARG_IMAGE, image);\r\n        FullScreenImageFragment fragment = new FullScreenImageFragment();\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_fullscreen_images, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        ImageView img_fullScreenImage = view.findViewById(R.id.fullscreen_image);\r\n        Image image = (Image) getArguments().getSerializable(ARG_IMAGE);\r\n\r\n        Picasso.get().load(image.getImageUri()).fit().centerInside().into(img_fullScreenImage);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/projects/timely/gallery/FullScreenImageFragment.java	(revision ff1087909bfd383744e5e5982e14ee3edb88f054)
+++ app/src/main/java/com/projects/timely/gallery/FullScreenImageFragment.java	(date 1618228631561)
@@ -1,20 +1,27 @@
 package com.projects.timely.gallery;
 
+import android.annotation.SuppressLint;
 import android.os.Bundle;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.ScaleGestureDetector;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 
-import com.projects.timely.R;
-import com.squareup.picasso.Picasso;
-
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-public class FullScreenImageFragment extends Fragment {
+import com.projects.timely.R;
+import com.squareup.picasso.Picasso;
+
+@SuppressWarnings("ConstantConditions")
+public class FullScreenImageFragment extends Fragment implements View.OnTouchListener {
     public static final String ARG_IMAGE = "Fullscreen image";
+    private ScaleGestureDetector scaleGestureDetector;
+    private ImageView img_fullScreenImage;
+    private float scaleFactor;
 
     public static FullScreenImageFragment newInstance(Image image) {
 
@@ -35,9 +42,32 @@
     @Override
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
-        ImageView img_fullScreenImage = view.findViewById(R.id.fullscreen_image);
+        img_fullScreenImage = view.findViewById(R.id.fullscreen_image);
         Image image = (Image) getArguments().getSerializable(ARG_IMAGE);
 
-        Picasso.get().load(image.getImageUri()).fit().centerInside().into(img_fullScreenImage);
+        scaleGestureDetector = new ScaleGestureDetector(getActivity(), new ScaleListener());
+        Picasso.get().load(image.getImageUri()).fit()
+                .noFade().centerInside().into(img_fullScreenImage);
+
+    }
+
+    @SuppressLint("ClickableViewAccessibility")
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        scaleGestureDetector.onTouchEvent(event);
+        return false;
     }
+
+    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {
+
+        @Override
+        public boolean onScale(ScaleGestureDetector detector) {
+            scaleFactor *= scaleGestureDetector.getScaleFactor();
+            scaleFactor = Math.max(0.1f, Math.min(scaleFactor, 10.0f));
+            img_fullScreenImage.setScaleX(scaleFactor);
+            img_fullScreenImage.setScaleY(scaleFactor);
+            return true;
+        }
+    }
+
 }
\ No newline at end of file
